<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FTBXText_FindEligibleRoles</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class FTBXText_FindEligibleRoles
{
    

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        FTBXPRMSelfServiceEligibleRoles eligibleRoles;
        UserGroupList                   userGroupList;
        Set roleSet = new Set(Types::Class);

        while select * from eligibleRoles
            where eligibleRoles.UserCode == TableGroupAll::Table
            &&    eligibleRoles.UserValue == curUserId()
            &&    eligibleRoles.FromDateTime<= DateTimeUtil::getSystemDateTime()
            &&   (eligibleRoles.ToDateTime >= DateTimeUtil::getSystemDateTime() || eligibleRoles.ToDateTime == DateTimeUtil::minValue())
        {
            new FTBXPRMSelfServiceUserEligibleRole(curUserId(), eligibleRoles.SysSecurityRoleRecId)
                .setUserEligibilityRecord(eligibleRoles)
                .appendToSetIfNotExists(roleSet);
        }

        while select * from eligibleRoles
            where eligibleRoles.UserCode == TableGroupAll::GroupId
            &&    eligibleRoles.FromDateTime<= DateTimeUtil::getSystemDateTime()
            &&   (eligibleRoles.ToDateTime >= DateTimeUtil::getSystemDateTime() || eligibleRoles.ToDateTime == DateTimeUtil::minValue())
            exists join userGroupList
                where userGroupList.groupId == eligibleRoles.UserValue
                &&    userGroupList.userId  == curUserId()
        {
            new FTBXPRMSelfServiceUserEligibleRole(curUserId(), eligibleRoles.SysSecurityRoleRecId)
                .setUserEligibilityRecord(eligibleRoles)
                .appendToSetIfNotExists(roleSet);
        }

        while select * from eligibleRoles
            where eligibleRoles.UserCode == TableGroupAll::All
            &&    eligibleRoles.FromDateTime <= DateTimeUtil::getSystemDateTime()
            &&   (eligibleRoles.ToDateTime >= DateTimeUtil::getSystemDateTime() || eligibleRoles.ToDateTime == DateTimeUtil::minValue())
        {
            new FTBXPRMSelfServiceUserEligibleRole(curUserId(), eligibleRoles.SysSecurityRoleRecId)
                .setUserEligibilityRecord(eligibleRoles)
                .appendToSetIfNotExists(roleSet);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>