<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FTBXPRMSelfServiceRoleRequestState</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Method that contains logic that handles state change actions of PRM requests
/// </summary>
internal class FTBXPRMSelfServiceRoleRequestState
{
    FTBXPRMSelfServiceRoleRequest request;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructor of the PRM entity state
    /// </summary>
    /// <param name = "_request">PRM request entity</param>
    /// <param name = "_status">Status that the PRM entity should change to</param>
    /// <returns>An instantiated FTBXPRMSelfServiceRoleRequestState object</returns>
    public static FTBXPRMSelfServiceRoleRequestState construct(FTBXPRMSelfServiceRoleRequest _request, FTBXPRMSelfServiceRoleRequestStatus _status)
    {
        FTBXPRMSelfServiceRoleRequestState state;

        state = SysExtensionAppClassFactory::getClassFromSysAttribute(
            classStr(FTBXPRMSelfServiceRoleRequestState),
            new FTBXPRMSelfServiceRoleRequestStateAttribute(_status));

        if (!state)
        {
            switch(_status)
            {
                case (FTBXPRMSelfServiceRoleRequestStatus::Submitted):
                    state = new FTBXPRMSelfServiceRoleRequestState_Submitted();
                    break;
                case (FTBXPRMSelfServiceRoleRequestStatus::Assigned):
                    state = new FTBXPRMSelfServiceRoleRequestState_Assigned();
                    break;
                default:
                    state = new FTBXPRMSelfServiceRoleRequestState();
            }
        }

        state.init(_request);

        return state;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// initializes the PRM entity state 
    /// </summary>
    /// <param name = "_request">The request that should change status</param>
    public void init(FTBXPRMSelfServiceRoleRequest _request)
    {
        request = _request;
    }

]]></Source>
			</Method>
			<Method>
				<Name>changeState</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method that contains exception handling logic of the PRM entity state
    /// </summary>
    public final void changeState()
    {
        #OCCRETRYCOUNT

        try
        {
            ttsbegin;

            this.changeStateInternal();

            ttscommit;
        }
        catch (Exception::Deadlock)
        {
            // retry on deadlock
            retry;
        }
        catch (Exception::UpdateConflict)
        {
            // try to resolve update conflict
            if (appl.ttsLevel() == 0)
            {
                if (xSession::currentRetryCount() >= #RetryNum)
                {
                    throw Exception::UpdateConflictNotRecovered;
                    
                }
                else
                {
                    retry;
                }
            }
            else
            {
                throw Exception::UpdateConflict;
            }
        }
        catch(Exception::DuplicateKeyException)
        {
            // retry in case of an duplicate key conflict
            if (appl.ttsLevel() == 0)
            {
                if (xSession::currentRetryCount() >= #RetryNum)
                {
                    throw Exception::DuplicateKeyExceptionNotRecovered;
                }
                else
                {
                    retry;
                }
            }
            else
            {
                throw Exception::DuplicateKeyException;
            }
        }
        

    }

]]></Source>
			</Method>
			<Method>
				<Name>changeStateInternal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method that contains logic that handles commit actions on the PRM entity state
    /// </summary>
    protected void changeStateInternal()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>