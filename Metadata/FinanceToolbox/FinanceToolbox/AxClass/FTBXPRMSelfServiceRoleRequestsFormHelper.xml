<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FTBXPRMSelfServiceRoleRequestsFormHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class FTBXPRMSelfServiceRoleRequestsFormHelper
{
    FormRun formRun;

    FTBXPRMSelfServiceRoleRequestsMode mode;

    FormDataSource          fdsSelfServiceRoleRequest;
    QueryBuildDataSource    qbdsSelfServiceRoleRequest;
    QueryBuildRange         qbrSelfServiceUserRange;
    QueryBuildRange         qbrSelfServiceStatusRange;

    FormCheckBoxControl     fcbcOnlyShowOpen;
    FormCheckBoxControl     fcbcOnlyShowMine;

    FormButtonControl           fbtnExpireRole;
    FormFunctionButtonControl   fbtnCreateRequest;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    public void updateDesign()
    {
        if (formRun.name() == formStr(FTBXPRMSelfServiceRoleRequests))
        {
            switch (mode)
            {
                case FTBXPRMSelfServiceRoleRequestsMode::EligibleRolesOwnUser:
                    fcbcOnlyShowOpen.visible(true);
                    fcbcOnlyShowMine.visible(false);
                    break;
                case FTBXPRMSelfServiceRoleRequestsMode::EligibleRolesAllUsers:
                case FTBXPRMSelfServiceRoleRequestsMode::AllRolesAllUsers:
                    fcbcOnlyShowOpen.visible(true);
                    fcbcOnlyShowMine.visible(true);
                    break;
            }
        }
        else if (formRun.name() == formStr(FTBXPRMSelfServiceRoleRequests))
        {
            if (mode == FTBXPRMSelfServiceRoleRequestsMode::AssignedToMe)
            {
                fbtnExpireRole.visible(false);
                fbtnCreateRequest.visible(false);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setButtonsEnabled</Name>
				<Source><![CDATA[
    public void setButtonsEnabled()
    {
        FTBXPRMSelfServiceRoleRequests roleRequests = fdsSelfServiceRoleRequest.cursor();

        fbtnExpireRole.enabled(roleRequests && roleRequests.RequestStatus == FTBXPRMSelfServiceRoleRequestStatus::Assigned);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getMode</Name>
				<Source><![CDATA[
    public FTBXPRMSelfServiceRoleRequestsMode getMode()
    {
        return mode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateQuery</Name>
				<Source><![CDATA[
    public void updateQuery(boolean _executeQuery = true)
    {
        if (formRun.name() == formStr(FTBXPRMSelfServiceRoleRequests))
        {        
            if (fcbcOnlyShowMine.checked())
            {
                qbrSelfServiceUserRange.value(queryValue(curUserId()));
            }
            else
            {
                qbrSelfServiceUserRange.value(SysQuery::valueUnlimited());
            }

            if (fcbcOnlyShowOpen.checked())
            {
                qbrSelfServiceStatusRange.value(SysQuery::range(FTBXPRMSelfServiceRoleRequestStatus::Created, FTBXPRMSelfServiceRoleRequestStatus::Assigned));
            }
            else
            {
                qbrSelfServiceStatusRange.value(SysQuery::valueUnlimited());
            }

            if (_executeQuery)
            {
                fdsSelfServiceRoleRequest.executeQuery();
            }
        }
        else if (formRun.name() == formStr(FTBXPRMSelfServiceRoleRequestsOverview))
        {
            if (mode == FTBXPRMSelfServiceRoleRequestsMode::AssignedToMe)
            {
                QueryBuildDataSource qbdsWorkflowWorkItemTable;

                qbdsWorkflowWorkItemTable = qbdsSelfServiceRoleRequest.addDataSource(tableNum(WorkflowWorkItemTable));
                qbdsWorkflowWorkItemTable.joinMode(JoinMode::ExistsJoin);
                qbdsWorkflowWorkItemTable.addLink(fieldNum(WorkflowWorkItemTable, RecId),    fieldNum(WorkflowWorkItemTable, RefRecId));
                qbdsWorkflowWorkItemTable.addLink(fieldNum(WorkflowWorkItemTable, TableId),  fieldNum(WorkflowWorkItemTable, RefTableId));

                QueryBuildRange qbrWorkItemStatus = qbdsWorkflowWorkItemTable.addRange(fieldNum(WorkflowWorkItemTable, Status));
                qbrWorkItemStatus.status(RangeStatus::Locked);
                qbrWorkItemStatus.value(queryValue(WorkflowWorkItemStatus::Pending));

                QueryBuildRange qbrWorkItemUserId = qbdsWorkflowWorkItemTable.addRange(fieldNum(WorkflowWorkItemTable, UserId));
                qbrWorkItemUserId.status(RangeStatus::Locked);
                qbrWorkItemUserId.value(queryValue(curUserId()));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>onRequestCreated</Name>
				<Source><![CDATA[
    public void onRequestCreated()
    {
        fdsSelfServiceRoleRequest.research(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new(FormRun _formRun, FTBXPRMSelfServiceRoleRequestsMode _mode)
    {
        formRun     = _formRun;
        mode        = _mode;

        this.initFromFormRun();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static FTBXPRMSelfServiceRoleRequestsFormHelper construct(FormRun _formRun, FTBXPRMSelfServiceRoleRequestsMode _mode)
    {
        return new FTBXPRMSelfServiceRoleRequestsFormHelper(_formRun, _mode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromFormRun</Name>
				<Source><![CDATA[
    private void initFromFormRun()
    {
        fdsSelfServiceRoleRequest   = formRun.findFirstFormDataSource(tableNum(FTBXPRMSelfServiceRoleRequests));
        qbdsSelfServiceRoleRequest  = fdsSelfServiceRoleRequest.queryBuildDataSource();

        qbrSelfServiceUserRange     = SysQuery::findOrCreateRange(qbdsSelfServiceRoleRequest, fieldNum(FTBXPRMSelfServiceRoleRequests, UserId));
        qbrSelfServiceStatusRange   = SysQuery::findOrCreateRange(qbdsSelfServiceRoleRequest, fieldNum(FTBXPRMSelfServiceRoleRequests, RequestStatus));
        
        fbtnExpireRole      = formRun.control(formRun.controlId(formControlStr(FTBXPRMSelfServiceRoleRequests, SetStatusToExpiredBtn)));
        fbtnCreateRequest   = formRun.control(formRun.controlId(formControlStr(FTBXPRMSelfServiceRoleRequests, FTBXPRMCreateSelfServiceRoleRequests)));

        if (formRun.name() == formStr(FTBXPRMSelfServiceRoleRequests))
        {   
            fcbcOnlyShowOpen    = formRun.control(formRun.controlId(formControlStr(FTBXPRMSelfServiceRoleRequests, OnlyShowOpenChkBox)));
            fcbcOnlyShowMine    = formRun.control(formRun.controlId(formControlStr(FTBXPRMSelfServiceRoleRequests, OnlyShowMineChkBox)));
            
            qbrSelfServiceUserRange.status(RangeStatus::Locked);            
            qbrSelfServiceStatusRange.status(RangeStatus::Locked);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>